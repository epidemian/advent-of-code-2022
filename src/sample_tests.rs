// This file was auto-generated by build.rs

#[cfg(test)]
mod tests {
    use crate::*;

    #[test] fn day_12_hill_climbing_algorithm_sample() { run_sample_test(12, day_12_hill_climbing_algorithm::run) }
    #[test] fn day_16_proboscidea_volcanium_sample() { run_sample_test(16, day_16_proboscidea_volcanium::run) }
    #[ignore] #[test] fn day_22_monkey_map_sample() { run_sample_test(22, day_22_monkey_map::run) }
    #[test] fn day_23_unstable_diffusion_sample() { run_sample_test(23, day_23_unstable_diffusion::run) }
    #[test] fn day_24_blizzard_basin_sample() { run_sample_test(24, day_24_blizzard_basin::run) }
    #[test] fn day_25_full_of_hot_air_sample() { run_sample_test(25, day_25_full_of_hot_air::run) }

    fn run_sample_test(day_num: usize, day_fn: fn(&str) -> String) {
        let path = format!("./samples/{day_num:02}.txt");
        let content = std::fs::read_to_string(path).expect("error reading sample file");
        let (input, expected_output) = content
            .split_once("\n~~~\n")
            .expect("expected '~~~' on sample file");
        let output = day_fn(input);
        assert_eq!(output, expected_output.trim());
    }
}
